{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Orange Cat",
  "patterns": [
    { "include": "#keywords" },
    { "include": "#strings" },
    { "include": "#comments" },
    { "include": "#numbers" },
    { "include": "#characters" },
    { "include": "#functions" },
    { "include": "#variables" },
    { "include": "#constants" },
    { "include": "#operators" },
    { "include": "#types" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control",
          "match": "\\b(if|while|for|forever|do|stop|skip|return|instance|print|get)\\b"
        },
        {
          "name": "invalid.illegal",
          "match": "\\b(@|รง)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.single",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.double",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.block.documentation",
          "begin": "/\\*!",
          "end": "\\*/"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "characters": {
      "patterns": [
        {
          "name": "constant.character",
          "match": "'([^'\\\\]|\\\\.)'"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language",
          "match": "\\b(true|false|null|void|this|super|master)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator",
          "match": "\\b(\\+|=|\\*|-|/|%|<=|>=|<|>|->|=>|#|&)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type",
          "match": "\\b(int|char|decimal|string|func|bool|class|interface)\\b"
        },
        {
          "name": "entity.name.class",
          "match": "(?<=\\W|^)[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*[{>#])"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\s*\\()"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.name",
          "match": "(?<=\\W|^)[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*[.=;)])"
        }
      ]
    }
  },
  "scopeName": "source.ocat"
}
